<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.BookingMapper">

    <!-- Insert Booking with member_id fetched from the card table -->
    <insert id="insertBooking">
        insert into booking (booking_no, board_no, start_date, end_date, people_count, price, total_price, member_id)
        values (null, #{boardNo}, #{startDate}, #{endDate}, #{peopleCount}, #{price}, #{totalPrice}, 
                (select member_id from card where card_num = #{cardNum} limit 1))
    </insert>

    <!-- Select max booking number by member_id -->
    <select id="selectBookingNo" resultType="Integer">
        select max(booking_no) from booking where member_id = #{memberId}
    </select>

    <!-- Result map for CardVO -->
    <resultMap id="cardResultMap" type="org.zerock.domain.CardVO">
        <result column="card_num" property="cardNum"/>
        <result column="member_id" property="memberId"/>
        <result column="bank" property="bank"/>
        <result column="card_pass" property="cardPass"/>
        <result column="balance" property="balance"/>
    </resultMap>

    <!-- Select card details by member_id -->
    <select id="selectCard" resultMap="cardResultMap">
        select card_num as cardNum, member_id as memberId, bank, card_pass as cardPass, balance
        from card 
        where member_id = #{memberId}
    </select>

    <!-- Update card balance by card_num -->
    <update id="updateBalance">
        update card set balance = #{balance} where card_num = #{cardNum}
    </update>

    <!-- Insert payment record -->
    <insert id="insertPayment">
        insert into payment (payment_no, member_id, card_num, bank, booking_no)
        values (null, #{card.memberId}, #{card.cardNum}, #{card.bank}, #{bookingNo})
    </insert>

    <!-- Get list of bookings by user (member_id) -->
    <select id="getListByUser" parameterType="String" resultType="org.zerock.domain.BookingVO">
        SELECT booking_no as bookingNo, board_no as boardNo, start_date as startDate, 
               end_date as endDate, people_count as peopleCount, price, total_price as totalPrice, member_id as memberId
        FROM booking
        WHERE member_id = #{memberId}
    </select>

    <!-- Read booking details by booking_no -->
    <select id="read" parameterType="Long" resultType="org.zerock.domain.BookingVO">
        SELECT booking_no as bookingNo, board_no as boardNo, start_date as startDate, 
               end_date as endDate, people_count as peopleCount, price, total_price as totalPrice, member_id as memberId
        FROM booking 
        WHERE booking_no = #{bookingNo}
    </select>

    <!-- Delete booking by booking_no -->
    <delete id="delete" parameterType="Long">
        DELETE FROM booking WHERE booking_no = #{bookingNo}
    </delete>

</mapper>
